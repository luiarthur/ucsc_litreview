// This file was generated by /misc/GenCloneCode.scala
package cytof5
  object CloneXdArray {
    def clone0dDouble(x:Double) = x
    def clone1dDouble(x:Array[Double]) = x.clone
    def clone2dDouble(x:Array[Array[Double]]) = x.map(clone1dDouble)
    def clone3dDouble(x:Array[Array[Array[Double]]]) = x.map(clone2dDouble)
    def clone4dDouble(x:Array[Array[Array[Array[Double]]]]) = x.map(clone3dDouble)
    def clone5dDouble(x:Array[Array[Array[Array[Array[Double]]]]]) = x.map(clone4dDouble)
    def clone6dDouble(x:Array[Array[Array[Array[Array[Array[Double]]]]]]) = x.map(clone5dDouble)
    def clone7dDouble(x:Array[Array[Array[Array[Array[Array[Array[Double]]]]]]]) = x.map(clone6dDouble)
    def clone8dDouble(x:Array[Array[Array[Array[Array[Array[Array[Array[Double]]]]]]]]) = x.map(clone7dDouble)
    def clone9dDouble(x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Double]]]]]]]]]) = x.map(clone8dDouble)
    def clone0dFloat(x:Float) = x
    def clone1dFloat(x:Array[Float]) = x.clone
    def clone2dFloat(x:Array[Array[Float]]) = x.map(clone1dFloat)
    def clone3dFloat(x:Array[Array[Array[Float]]]) = x.map(clone2dFloat)
    def clone4dFloat(x:Array[Array[Array[Array[Float]]]]) = x.map(clone3dFloat)
    def clone5dFloat(x:Array[Array[Array[Array[Array[Float]]]]]) = x.map(clone4dFloat)
    def clone6dFloat(x:Array[Array[Array[Array[Array[Array[Float]]]]]]) = x.map(clone5dFloat)
    def clone7dFloat(x:Array[Array[Array[Array[Array[Array[Array[Float]]]]]]]) = x.map(clone6dFloat)
    def clone8dFloat(x:Array[Array[Array[Array[Array[Array[Array[Array[Float]]]]]]]]) = x.map(clone7dFloat)
    def clone9dFloat(x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Float]]]]]]]]]) = x.map(clone8dFloat)
    def clone0dInt(x:Int) = x
    def clone1dInt(x:Array[Int]) = x.clone
    def clone2dInt(x:Array[Array[Int]]) = x.map(clone1dInt)
    def clone3dInt(x:Array[Array[Array[Int]]]) = x.map(clone2dInt)
    def clone4dInt(x:Array[Array[Array[Array[Int]]]]) = x.map(clone3dInt)
    def clone5dInt(x:Array[Array[Array[Array[Array[Int]]]]]) = x.map(clone4dInt)
    def clone6dInt(x:Array[Array[Array[Array[Array[Array[Int]]]]]]) = x.map(clone5dInt)
    def clone7dInt(x:Array[Array[Array[Array[Array[Array[Array[Int]]]]]]]) = x.map(clone6dInt)
    def clone8dInt(x:Array[Array[Array[Array[Array[Array[Array[Array[Int]]]]]]]]) = x.map(clone7dInt)
    def clone9dInt(x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Int]]]]]]]]]) = x.map(clone8dInt)
    def clone0dShort(x:Short) = x
    def clone1dShort(x:Array[Short]) = x.clone
    def clone2dShort(x:Array[Array[Short]]) = x.map(clone1dShort)
    def clone3dShort(x:Array[Array[Array[Short]]]) = x.map(clone2dShort)
    def clone4dShort(x:Array[Array[Array[Array[Short]]]]) = x.map(clone3dShort)
    def clone5dShort(x:Array[Array[Array[Array[Array[Short]]]]]) = x.map(clone4dShort)
    def clone6dShort(x:Array[Array[Array[Array[Array[Array[Short]]]]]]) = x.map(clone5dShort)
    def clone7dShort(x:Array[Array[Array[Array[Array[Array[Array[Short]]]]]]]) = x.map(clone6dShort)
    def clone8dShort(x:Array[Array[Array[Array[Array[Array[Array[Array[Short]]]]]]]]) = x.map(clone7dShort)
    def clone9dShort(x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Short]]]]]]]]]) = x.map(clone8dShort)
    def clone0dLong(x:Long) = x
    def clone1dLong(x:Array[Long]) = x.clone
    def clone2dLong(x:Array[Array[Long]]) = x.map(clone1dLong)
    def clone3dLong(x:Array[Array[Array[Long]]]) = x.map(clone2dLong)
    def clone4dLong(x:Array[Array[Array[Array[Long]]]]) = x.map(clone3dLong)
    def clone5dLong(x:Array[Array[Array[Array[Array[Long]]]]]) = x.map(clone4dLong)
    def clone6dLong(x:Array[Array[Array[Array[Array[Array[Long]]]]]]) = x.map(clone5dLong)
    def clone7dLong(x:Array[Array[Array[Array[Array[Array[Array[Long]]]]]]]) = x.map(clone6dLong)
    def clone8dLong(x:Array[Array[Array[Array[Array[Array[Array[Array[Long]]]]]]]]) = x.map(clone7dLong)
    def clone9dLong(x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Long]]]]]]]]]) = x.map(clone8dLong)
  
    def smartClone(a:Any): Any = a match {
        case x:Double => x
        case x:Array[Double] => x.clone
        case x:Array[Array[Double]] => x.map(clone1dDouble)
        case x:Array[Array[Array[Double]]] => x.map(clone2dDouble)
        case x:Array[Array[Array[Array[Double]]]] => x.map(clone3dDouble)
        case x:Array[Array[Array[Array[Array[Double]]]]] => x.map(clone4dDouble)
        case x:Array[Array[Array[Array[Array[Array[Double]]]]]] => x.map(clone5dDouble)
        case x:Array[Array[Array[Array[Array[Array[Array[Double]]]]]]] => x.map(clone6dDouble)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Double]]]]]]]] => x.map(clone7dDouble)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Double]]]]]]]]] => x.map(clone8dDouble)
        case x:Float => x
        case x:Array[Float] => x.clone
        case x:Array[Array[Float]] => x.map(clone1dFloat)
        case x:Array[Array[Array[Float]]] => x.map(clone2dFloat)
        case x:Array[Array[Array[Array[Float]]]] => x.map(clone3dFloat)
        case x:Array[Array[Array[Array[Array[Float]]]]] => x.map(clone4dFloat)
        case x:Array[Array[Array[Array[Array[Array[Float]]]]]] => x.map(clone5dFloat)
        case x:Array[Array[Array[Array[Array[Array[Array[Float]]]]]]] => x.map(clone6dFloat)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Float]]]]]]]] => x.map(clone7dFloat)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Float]]]]]]]]] => x.map(clone8dFloat)
        case x:Int => x
        case x:Array[Int] => x.clone
        case x:Array[Array[Int]] => x.map(clone1dInt)
        case x:Array[Array[Array[Int]]] => x.map(clone2dInt)
        case x:Array[Array[Array[Array[Int]]]] => x.map(clone3dInt)
        case x:Array[Array[Array[Array[Array[Int]]]]] => x.map(clone4dInt)
        case x:Array[Array[Array[Array[Array[Array[Int]]]]]] => x.map(clone5dInt)
        case x:Array[Array[Array[Array[Array[Array[Array[Int]]]]]]] => x.map(clone6dInt)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Int]]]]]]]] => x.map(clone7dInt)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Int]]]]]]]]] => x.map(clone8dInt)
        case x:Short => x
        case x:Array[Short] => x.clone
        case x:Array[Array[Short]] => x.map(clone1dShort)
        case x:Array[Array[Array[Short]]] => x.map(clone2dShort)
        case x:Array[Array[Array[Array[Short]]]] => x.map(clone3dShort)
        case x:Array[Array[Array[Array[Array[Short]]]]] => x.map(clone4dShort)
        case x:Array[Array[Array[Array[Array[Array[Short]]]]]] => x.map(clone5dShort)
        case x:Array[Array[Array[Array[Array[Array[Array[Short]]]]]]] => x.map(clone6dShort)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Short]]]]]]]] => x.map(clone7dShort)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Short]]]]]]]]] => x.map(clone8dShort)
        case x:Long => x
        case x:Array[Long] => x.clone
        case x:Array[Array[Long]] => x.map(clone1dLong)
        case x:Array[Array[Array[Long]]] => x.map(clone2dLong)
        case x:Array[Array[Array[Array[Long]]]] => x.map(clone3dLong)
        case x:Array[Array[Array[Array[Array[Long]]]]] => x.map(clone4dLong)
        case x:Array[Array[Array[Array[Array[Array[Long]]]]]] => x.map(clone5dLong)
        case x:Array[Array[Array[Array[Array[Array[Array[Long]]]]]]] => x.map(clone6dLong)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Long]]]]]]]] => x.map(clone7dLong)
        case x:Array[Array[Array[Array[Array[Array[Array[Array[Array[Long]]]]]]]]] => x.map(clone8dLong)
    }
    
}
