// Generated by `gen_module.py`. Don't edit by hand!
#ifndef STATE_ADDON_H
#define STATE_ADDON_H

#include <RcppArmadillo.h>

//' @export State
struct State {
  arma::vec beta_0; // I
  arma::vec beta_1; // I
  std::vector<Rcpp::NumericMatrix> missing_y; // I x (N[i] x J)
  arma::vec mus_0; // L0
  arma::vec mus_1; // L1
  arma::mat sig2_0; // I x L0
  arma::mat sig2_1; // I x L1
  arma::vec s; // I
  std::vector<Rcpp::IntegerMatrix> gam; // I x (N[i] x J)
  arma::cube eta_0; // I x J x L0
  arma::cube eta_1; // I x J x L1
  arma::vec v; // K
  double alpha;
  arma::mat H; // J x K
  std::vector<Rcpp::IntegerVector> lam; // I x N[i]
  arma::mat W; // I x K

  State(arma::vec beta_0_, arma::vec beta_1_, std::vector<Rcpp::NumericMatrix> missing_y_, arma::vec mus_0_, arma::vec mus_1_, arma::mat sig2_0_, arma::mat sig2_1_, arma::vec s_, std::vector<Rcpp::IntegerMatrix> gam_, arma::cube eta_0_, arma::cube eta_1_, arma::vec v_, double alpha_, arma::mat H_, std::vector<Rcpp::IntegerVector> lam_, arma::mat W_) : beta_0(beta_0_), beta_1(beta_1_), missing_y(missing_y_), mus_0(mus_0_), mus_1(mus_1_), sig2_0(sig2_0_), sig2_1(sig2_1_), s(s_), gam(gam_), eta_0(eta_0_), eta_1(eta_1_), v(v_), alpha(alpha_), H(H_), lam(lam_), W(W_) {}
};



#endif
